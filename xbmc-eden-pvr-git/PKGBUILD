# Maintainer: Simone Gaiarin <simgunz@gmail.com>

_prefix=/usr

pkgname=xbmc-eden-pvr-git
pkgver=20120608
pkgrel=1
pkgdesc="A software media player and entertainment hub for digital media - Eden PVR branch"
provides=('xbmc')
conflicts=('xbmc' 'xbmc-pulse' 'xbmc-svn' 'xbmc-git' 'xbmc-eden-git' 'xbmc-pvr-git')
arch=('i686' 'x86_64')
url="http://xbmc.org"
license=('GPL' 'custom')
depends=('libpulse' 'hicolor-icon-theme' 'fribidi' 'lzo2' 'smbclient' 'libtiff' 'libva' 'libpng' 'libcdio' 'yajl' 'libmysqlclient' 'libjpeg-turbo' 'libsamplerate' 'glew' 'libssh' 'libmicrohttpd' 'libxrandr' 'sdl_mixer' 'sdl_image' 'python2' 'libass' 'libmpeg2' 'libmad' 'libmodplug' 'jasper' 'rtmpdump' 'unzip' 'mesa-demos' 'xorg-utils' 'libbluray' 'libnfs' 'afpfs-ng' 'libshairport' 'avahi' 'bluez')
makedepends=('boost' 'cmake' 'gperf' 'nasm' 'libxinerama' 'zip' 'vdpau-video' 'libcec' 'udisks' 'upower' 'bluez')
optdepends=(
    'gdb: for meaningful backtraces in case of trouble - STRONGLY RECOMMENDED'
    'libcec: support for Pulse-Eight USB-CEC adapter'
    'vdpau-video: accelerated video playback for nvidia cards'
    'xvba-video: accelerated video playback for amd cards'
    'pulseaudio: pulseaudio support'
    'lirc: remote controller support'
    'udisks: automount external drives'
    'upower: used to trigger suspend functionality'
    'unrar: access compressed files without unpacking them'
)
install="${pkgname}.install"
source=()
sha256sums=()

if [ -e .githash_$CARCH ] ; then
    _gitphash=$(cat .githash_$CARCH)
else
    _gitphash=""
fi

_gitname='xbmc'
_gitroot='https://github.com/opdenkamp/xbmc.git'
_gitbranch='Eden-pvr'

build() {

    if [ -d "$srcdir/$_gitname/.git" ] ; then
        ( cd "$srcdir/$_gitname" && git pull origin $_gitbranch )
        msg "The local files are updated."
    else
        ( git clone -b $_gitbranch --depth 1  $_gitroot $_gitname )
    fi
    msg "GIT checkout done or server timeout"

    cd $_gitname
    if [ "$_gitphash" = "$(git show | grep -m 1 commit | sed 's/commit //')" ]; then
        msg "Git hash is the same as previous build"
        return 1
    fi

    msg "Creating build directory"
    cd "$srcdir"
    [ -d $_gitname-build ] && rm -rf $_gitname-build
    cp -a $_gitname $_gitname-build

    msg "Starting make..."
    cd "$_gitname-build"

    # fix lsb_release dependency
    sed -i -e 's:/usr/bin/lsb_release -d:cat /etc/arch-release:' xbmc/utils/SystemInfo.cpp

    # Bootstrapping XBMC
    msg2 "Bootstrapping XBMC"
    ./bootstrap

    # Configuring XBMC
    export PYTHON_VERSION=2    # external python v2
    ./configure --prefix=$_prefix --exec-prefix=$_prefix \
        --enable-debug \
        --enable-optimizations \
        --enable-gl \
        --enable-sdl \
        --enable-vaapi \
        --enable-vdpau \
        --enable-xvba \
        --enable-joystick \
        --enable-xrandr \
        --enable-rsxs \
        --enable-projectm \
        --enable-x11 \
        --enable-pulse \
        --enable-rtmp \
        --enable-samba \
        --enable-nfs \
        --enable-afpclient \
        --enable-airplay \
        --enable-airtunes \
        --enable-ffmpeg-libvorbis \
        --enable-dvdcss \
        --disable-hal \
        --enable-avahi \
        --enable-webserver \
        --enable-optical-drive \
        --enable-libbluray \
        --enable-texturepacker \
        --enable-udev \
        --enable-libusb \
        --enable-libcec \
        --enable-external-libraries \
        --disable-external-ffmpeg

    # Now (finally) build
    make
}

package() {

    cd "${srcdir}/${_gitname}-build"

    # Running make install
    msg2 "Running make install"
    make DESTDIR="${pkgdir}" install

    # run feh with python2
    sed -i -e 's/python/python2/g' ${pkgdir}${_prefix}/bin/xbmc

    # lsb_release fix
    sed -i -e 's/which lsb_release &> \/dev\/null/\[ -f \/etc\/arch-release ]/g' "${pkgdir}${_prefix}/bin/xbmc"
    sed -i -e "s/lsb_release -a 2> \/dev\/null | sed -e 's\/\^\/        \/'/cat \/etc\/arch-release/g" "${pkgdir}${_prefix}/bin/xbmc"

    # Tools
    install -D -m 0755 "${srcdir}/${_gitname}-build/xbmc-xrandr" "${pkgdir}${_prefix}/share/xbmc/xbmc-xrandr"
    install -D -m 0755 "${srcdir}/${_gitname}-build/tools/TexturePacker/TexturePacker" "${pkgdir}${_prefix}/share/xbmc/"

    # Licenses
    install -d -m 0755 "${pkgdir}${_prefix}/share/licenses/${pkgname}"
    for licensef in LICENSE.GPL copying.txt; do
        mv "${pkgdir}${_prefix}/share/doc/xbmc/${licensef}" "${pkgdir}${_prefix}/share/licenses/${pkgname}"
    done

    #cleanup some stuff
    msg2 "Cleaning up unneeded files"
    rm -rf "${pkgdir}/usr/share/xsessions"

    git show | grep -m 1 commit | sed 's/commit //' > $startdir/.githash_$CARCH
}
